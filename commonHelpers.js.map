{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet userSelectedDate;\nstartButton.setAttribute('disabled', true);\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate > new Date()) {\n      startButton.removeAttribute('disabled');\n    } else {\n      iziToast.error({\n        title: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n  },\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.setAttribute('disabled', true);\n  let interval = userSelectedDate - Date.now();\n  const remainingTime = setInterval(() => {\n    interval -= 1000;\n    const { days, hours, minutes, seconds } = convertMs(interval);\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n\n    function addLeadingZero(value) {\n      return value.toString().padStart(2, '0');\n    }\n\n    if (seconds === 0) {\n      clearInterval(remainingTime);\n    }\n  }, 1000);\n});\n"],"names":["startButton","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","interval","remainingTime","addLeadingZero","value"],"mappings":"2GASA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EACJL,EAAY,aAAa,WAAY,EAAI,EAEzCM,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,GAC7BF,EAAmB,IAAI,KACzBL,EAAY,gBAAgB,UAAU,EAEtCQ,EAAS,MAAM,CACb,MAAO,qCACP,SAAU,UAClB,CAAO,CAEJ,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAd,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,aAAa,WAAY,EAAI,EACzC,IAAIe,EAAWV,EAAmB,KAAK,IAAG,EAC1C,MAAMW,EAAgB,YAAY,IAAM,CACtCD,GAAY,IACZ,KAAM,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAQ,EAC5Dd,EAAO,YAAcgB,EAAeN,CAAI,EACxCT,EAAQ,YAAce,EAAeL,CAAK,EAC1CT,EAAU,YAAcc,EAAeJ,CAAO,EAC9CT,EAAU,YAAca,EAAeH,CAAO,EAE9C,SAASG,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CAEGJ,IAAY,GACd,cAAcE,CAAa,CAE9B,EAAE,GAAI,CACT,CAAC"}